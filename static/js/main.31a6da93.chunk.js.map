{"version":3,"sources":["tone.mp3","AllowButton.js","permission.js","videoFeed.js","steps.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AllowButton","triggerNextStep","onClick","navigator","mediaDevices","enumerateDevices","then","devices","every","device","deviceId","label","shouldAskForMediaPermissions","console","log","getUserMedia","audio","video","mediaStream","getTracks","forEach","track","stop","catch","err","Error","a","trigger","value","message","indexOf","VideoFeed","currentStream","ref","useRef","useEffect","el","current","muted","stream","srcObject","id","autoPlay","playsInline","style","width","height","SimpleForm","headerTitle","customDelay","steps","options","end","component","src","require","allow","display","asMessage","waitAction","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","error"],"mappings":"oKAAAA,EAAOC,QAAU,IAA0B,kC,yGCG3C,IAoBeC,EApBK,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,gBAiBlB,OAAQ,4BAAQC,QAfG,WCJZC,UAAUC,aACdC,mBACAC,MAAK,SAACC,GAAD,OACJA,EAAQC,OAAM,SAACC,GAAD,QAAcA,EAAOC,UAAYD,EAAOE,aAEvDL,MAAK,SAACM,GAEL,GADAC,QAAQC,IAAI,CAAEF,iCACVA,EACF,OAAOT,UAAUC,aACdW,aAAa,CAAEC,OAAO,EAAMC,OAAO,IACnCX,MAAK,SAACY,GAAD,OACJA,EAAYC,YAAYC,SAAQ,SAACC,GAAD,OAAWA,EAAMC,aAElDC,OAAM,SAACC,GAEN,MADAX,QAAQC,IAAI,oBAAqBU,GAC3B,IAAIC,MAAMD,SDTvBlB,MAAK,SAACoB,GACLzB,EAAgB,CAAC0B,QAAS,KAAMC,MAAO,aAExCL,OAAM,SAACG,GAAO,IACLG,GAAYH,GAAK,IAAjBG,QAEJA,GAAWA,EAAQC,QAAQ,kBAAoB,EAC/C7B,EAAgB,CAAC0B,QAAS,uBAE1B1B,EAAgB,CAAC0B,QAAS,KAAMC,MAAO,eAIvC,UElBG,SAASG,IACtB,IACIC,EADEC,EAAMC,iBAAO,MAkCnB,OANAC,qBAAU,WACR,IArBsBlB,EAqBhBmB,EAAKH,EAAII,QACfD,EAAGE,OAAQ,EAtBWrB,EAuBPmB,EAtBc,qBAAlBJ,GACOA,EANXb,YAAYC,SAAQ,SAACC,GAC1BA,EAAMC,UAYRnB,UAAUC,aACPW,aALiB,CAClBE,OAAO,EACPD,OAAO,IAINV,MAAK,SAACiC,GACLP,EAAgBO,EAChBtB,EAAMuB,UAAYD,KAEnBhB,OAAM,SAACC,GACNX,QAAQC,IAAIU,QAQf,IAGD,2BACEiB,GAAG,QACHR,IAAKA,EACLS,UAAQ,EACRC,aAAW,EACXC,MAAO,CAAEC,MAAO,QAASC,OAAQ,WCtCvC,IA+JiBC,EA/JE,WACb,OACE,kBAAC,IAAD,CACEC,YAAY,OACZC,YAAa,IACbC,MAAO,CACL,CACET,GAAI,IACJZ,QAAS,uCACTF,QAAS,KAEX,CACEc,GAAI,IACJZ,QAAS,2FACTF,QAAS,KAEX,CACEc,GAAI,IACFU,QAAS,CACP,CAAEvB,OAAO,EAAMjB,MAAO,cAAegB,QAAS,KAC9C,CAAEC,OAAO,EAAOjB,MAAO,aAAcgB,QAAS,iBAGpD,CACEc,GAAI,IACJZ,QAAS,8DACTF,QAAS,KAEX,CACIc,GAAI,cACJZ,QAAS,iBACTuB,KAAK,GAET,CACEX,GAAI,IACJU,QAAS,CACP,CAAEvB,OAAO,EAAMjB,MAAO,OAAQgB,QAAS,WAG3C,CACIc,GAAI,QACJY,UAAW,oCACP,4BAAQC,IAAKC,EAAQ,IAAeC,MAAM,WAAWZ,MAAO,CAACa,QAAQ,QAAShB,GAAG,iBAErFiB,WAAW,EACX/B,QAAS,KAGb,CACEc,GAAI,IACJZ,QAAS,qCACTF,QAAS,KAEX,CACIc,GAAI,IACFU,QAAS,CACP,CAAEvB,OAAO,EAAMjB,MAAO,MAAOgB,QAAS,KACtC,CAAEC,OAAO,EAAOjB,MAAO,KAAMgB,QAAS,iBAG9C,CACIc,GAAI,IACJZ,QAAS,+DACTF,QAAS,MAEb,CACIc,GAAI,KACJZ,QAAS,qDACTF,QAAS,MAEb,CACIc,GAAI,KACJU,QAAS,CACP,CAAEvB,OAAO,EAAMjB,MAAO,QAASgB,QAAS,QAG9C,CACIc,GAAI,KACJZ,QAAS,wGACTF,QAAS,MAEb,CACIc,GAAI,KACJY,UAAW,kBAAC,EAAD,MACXK,WAAW,EACXC,YAAY,GAEhB,CACIlB,GAAI,KACJZ,QAAS,wEACTF,QAAS,MAGb,CACEc,GAAI,KACJZ,QAAS,yDACTF,QAAS,MAGX,CACEc,GAAI,KACJZ,QAAS,6EACTF,QAAS,MAEX,CACEc,GAAI,KACJU,QAAS,CACP,CAAEvB,OAAO,EAAMjB,MAAO,aAAcgB,QAAS,QAGjD,CACEc,GAAI,qBACJZ,QAAS,uFACTF,QAAS,MAEX,CACIc,GAAI,KACJZ,QAAS,wDACTF,QAAS,cAEb,CACEc,GAAI,aACJY,UAAW,qCACXK,WAAW,EACX/B,QAAS,MAEX,CACIc,GAAI,KACJZ,QAAS,8DACTF,QAAS,MAEb,CACIc,GAAI,KACJZ,QAAS,gEACTF,QAAS,SAEb,CACIc,GAAI,QACJY,UAAW,kBAACtB,EAAD,MACX2B,WAAW,EACX/B,QAAS,MAEb,CACIc,GAAI,KACFU,QAAS,CACP,CAAEvB,OAAO,EAAMjB,MAAO,MAAOgB,QAAS,MACtC,CAAEC,OAAO,EAAOjB,MAAO,KAAMgB,QAAS,iBAG9C,CACIc,GAAI,KACJZ,QAAS,0EChJV+B,MARf,WACE,OACE,yBAAKC,UAAU,OACb,kBAAC,EAAD,QCKcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBpE,WACrBA,UAAUqE,cAAcC,MACrBnE,MAAK,SAAAoE,GACJA,EAAaC,gBAEdpD,OAAM,SAAAqD,GACL/D,QAAQ+D,MAAMA,EAAM/C,c","file":"static/js/main.31a6da93.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tone.fedc1eda.mp3\";","import React from 'react';\r\nimport { ensureMediaPermissions } from \"./permission\";\r\n\r\nconst AllowButton = ({triggerNextStep}) => {\r\n\r\n  const okClickAllow = () => {\r\n    ensureMediaPermissions()\r\n      .then((a) => {\r\n        triggerNextStep({trigger: '14', value: 'Okay!'});\r\n      })\r\n      .catch((a) => {\r\n        const { message } = a || {};\r\n        \r\n        if (message && message.indexOf(\"NotFoundError\") > -1)\r\n            triggerNextStep({trigger: 'no-devices-message'});\r\n        else \r\n            triggerNextStep({trigger: '15', value: 'Okay!'});\r\n      });\r\n    };\r\n\r\n    return (<button onClick={okClickAllow}>Okay!</button>)\r\n}\r\n\r\nexport default AllowButton;","export function ensureMediaPermissions() {\r\n    return navigator.mediaDevices\r\n      .enumerateDevices()\r\n      .then((devices) =>\r\n        devices.every((device) => !(device.deviceId && device.label))\r\n      )\r\n      .then((shouldAskForMediaPermissions) => {\r\n        console.log({ shouldAskForMediaPermissions });\r\n        if (shouldAskForMediaPermissions) {\r\n          return navigator.mediaDevices\r\n            .getUserMedia({ audio: true, video: true })\r\n            .then((mediaStream) =>\r\n              mediaStream.getTracks().forEach((track) => track.stop())\r\n            )\r\n            .catch((err) => {\r\n              console.log(\"Permission denied\", err);\r\n              throw new Error(err);\r\n            });\r\n        }\r\n      });\r\n  }\r\n  ","import React, { useRef, useEffect } from \"react\";\r\n \r\nexport default function VideoFeed() {\r\n  const ref = useRef(null);\r\n  let currentStream;\r\n \r\n  function stopMediaTracks(stream) {\r\n    stream.getTracks().forEach((track) => {\r\n      track.stop();\r\n    });\r\n  }\r\n  function getVideoStream(video) {\r\n    if (typeof currentStream !== \"undefined\") {\r\n      stopMediaTracks(currentStream);\r\n    }\r\n \r\n    const constraints = {\r\n      video: true,\r\n      audio: false,\r\n    };\r\n    navigator.mediaDevices\r\n      .getUserMedia(constraints)\r\n      .then((stream) => {\r\n        currentStream = stream;\r\n        video.srcObject = stream;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n \r\n  useEffect(() => {\r\n    const el = ref.current;\r\n    el.muted = true;\r\n    getVideoStream(el);\r\n  }, []);\r\n \r\n  return (\r\n    <video\r\n      id=\"video\"\r\n      ref={ref}\r\n      autoPlay\r\n      playsInline\r\n      style={{ width: \"200px\", height: \"200px\" }}\r\n    ></video>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ChatBot from 'react-simple-chatbot';\r\nimport AllowButton from './AllowButton';\r\nimport VideoFeed from './videoFeed';\r\n\r\nconst SimpleForm = () => {\r\n      return (\r\n        <ChatBot\r\n          headerTitle=\"BSWH\"\r\n          customDelay={2000}\r\n          steps={[\r\n            {\r\n              id: '1',\r\n              message: \"Hey there, I'm BSWHbot! üòÑ\",\r\n              trigger: '2',\r\n            },\r\n            {\r\n              id: '2',\r\n              message: \"I've been asked to make sure your system is ready for a BSWH call. Shall we get started?\",\r\n              trigger: '3'\r\n            },\r\n            {\r\n              id: '3',\r\n                options: [\r\n                  { value: true, label: 'Yes, please', trigger: '4' },\r\n                  { value: false, label: 'No, thanks', trigger: 'end-message' },\r\n                ]\r\n            },\r\n            {\r\n              id: '4',\r\n              message: \"Alrighty, let's start by testing your speakers. Click Play!\",\r\n              trigger: '6'\r\n            },            \r\n            {\r\n                id: 'end-message',\r\n                message: 'Okay, see you!',\r\n                end: true,\r\n            },\r\n            {\r\n              id: '6',\r\n              options: [\r\n                { value: true, label: 'Play', trigger: 'audio' }\r\n              ]\r\n            },\r\n            {\r\n                id: 'audio',\r\n                component: <>\r\n                    <iframe src={require('./tone.mp3')} allow=\"autoplay\" style={{display:'none'}} id=\"iframeAudio\" />\r\n                    </>,\r\n                asMessage: true,\r\n                trigger: '7'\r\n\r\n            },\r\n            {\r\n              id: '7',\r\n              message: \"Do you hear the sound I'm playing?\",\r\n              trigger: '8'          \r\n            },           \r\n            {\r\n                id: '8',\r\n                  options: [\r\n                    { value: true, label: 'Yes', trigger: '9' },\r\n                    { value: false, label: 'No', trigger: 'end-message' },\r\n                  ]\r\n            },\r\n            {\r\n                id: '9',\r\n                message: \"Super üòä! That means you will hear your provider.?\",\r\n                trigger: '10'          \r\n            },\r\n            {\r\n                id: '10',\r\n                message: \"Okay, now let's check your microphone and webcam.?\",\r\n                trigger: '11'          \r\n            },\r\n            {\r\n                id: '11',\r\n                options: [\r\n                  { value: true, label: 'Okay!', trigger: '12' }\r\n                ]\r\n            },\r\n            {\r\n                id: '12',\r\n                message: \"I'll need your permission to use your microphone and webcam. When prompted, click Allow. üôè\",\r\n                trigger: '13'          \r\n            },     \r\n            {\r\n                id: '13',\r\n                component: <AllowButton />,\r\n                asMessage: true,\r\n                waitAction: true           \r\n            },       \r\n            {\r\n                id: '14',\r\n                message: \"Ok great, it looks like we can now access your microphone and camera!\",\r\n                trigger: '18'\r\n                      \r\n            },\r\n            {\r\n              id: '15',\r\n              message: \"Whoa, you denied access to your microphone and webcam!\",\r\n              trigger: '16'\r\n                    \r\n            },\r\n            {\r\n              id: '16',\r\n              message: \"In order for your microphone and webcam to work, you need to allow access.\",\r\n              trigger: '17'                    \r\n            },\r\n            {\r\n              id: '17',\r\n              options: [\r\n                { value: true, label: 'Try Again!', trigger: '10' }\r\n              ]\r\n            },\r\n            {\r\n              id: 'no-devices-message',\r\n              message: \"Uh oh! Looks like you dont have either camera or microphone connected to your device\",\r\n              trigger: '17'             \r\n            },\r\n            {\r\n                id: '18',\r\n                message: \"Say something into your microphone?üéôÔ∏è\",\r\n                trigger: 'microphone'          \r\n            },\r\n            {\r\n              id: 'microphone',\r\n              component: <></>,\r\n              asMessage: true,\r\n              trigger: '19'\r\n            },\r\n            {\r\n                id: '19',\r\n                message: \"Woohoo, I hear you loud and clear! üì¢ü§™\",\r\n                trigger: '20'          \r\n            },\r\n            {\r\n                id: '20',\r\n                message: \"Ok, time for the webcam! Do you see a video feed of yourself?\",\r\n                trigger: 'video'          \r\n            },\r\n            {\r\n                id: 'video',\r\n                component: <VideoFeed />,\r\n                asMessage: false,\r\n                trigger: '21'\r\n            },\r\n            {\r\n                id: '21',\r\n                  options: [\r\n                    { value: true, label: 'Yes', trigger: '22' },\r\n                    { value: false, label: 'No', trigger: 'end-message' },\r\n                  ]\r\n            },\r\n            {\r\n                id: '22',\r\n                message: \"Alright, you're all set for a great call! üéâü§©\"\r\n            }            \r\n          ]}\r\n        />\r\n      );\r\n    }\r\n  \r\n  \r\n  export default SimpleForm;","import React from 'react';\nimport './App.css';\nimport SimpleForm from './steps';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SimpleForm />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}